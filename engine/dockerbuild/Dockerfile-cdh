FROM centos:6.8

MAINTAINER vegas@b2wdigital.com

RUN curl -o /etc/yum.repos.d/cloudera-cdh5.repo https://archive.cloudera.com/cdh5/redhat/6/x86_64/cdh/cloudera-cdh5.repo

# CDH 5.8.3
RUN sed -i 's/\/5\//\/5.8.3\//' /etc/yum.repos.d/cloudera-cdh5.repo

RUN yum update -y && yum install -y \
    hadoop-hdfs-namenode \
    hadoop-hdfs-datanode \
    hadoop-httpfs \
    hadoop-yarn-resourcemanager \
    hive \
    hive-server2 \
    impala \
    impala-server \
    impala-state-store \
    impala-catalog \
    impala-shell \
    sudo \
    && yum clean all

# JAVA 8
ADD apps/jdk-8u102-linux-x64.rpm /opt/
RUN rpm -i /opt/jdk-8u102-linux-x64.rpm
RUN rm /opt/jdk-8u102-linux-x64.rpm

ENV JAVA_HOME /usr/java/default
ENV JRE_HOME /usr/java/default/jre
ENV PATH $PATH:$JAVA_HOME/bin

# HADOOP Env's
ENV HADOOP_HOME=/usr/lib/hadoop/ \
    HADOOP_PREFIX=/usr/lib/hadoop/ \
    HADOOP_CONF_DIR=/etc/hadoop/conf/

COPY configs/hadoop/core-site.xml configs/hadoop/hdfs-site.xml $HADOOP_CONF_DIR

RUN sed -i s/HOSTNAME/0.0.0.0/g $HADOOP_CONF_DIR/*-site.xml

RUN mkdir -p /data/nn/ /data/dn/ && chown hdfs:hadoop /data/*

RUN mkdir -p /var/run/hdfs-sockets/ && chown hdfs:hadoop /var/run/hdfs-sockets/

# Hive Env's
ENV HIVE_HOME=/usr/lib/hive/ \
    HIVE_CONF_DIR=/etc/hive/conf/

### HIVE ###
COPY configs/hive/hive-site.xml /etc/hive/conf/

# Impala Env's
ENV IMPALA_HOME=/usr/lib/impala/ \
    IMPALA_CONF_DIR=/etc/impala/conf/

### IMPALA ###
COPY configs/hive/hive-site.xml /etc/impala/conf/

RUN curl -LO http://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.39.tar.gz

RUN tar -zxf mysql-connector-* \
    && cp mysql-connector-*/mysql-connector* $HIVE_HOME/lib \
    && cp mysql-connector-*/mysql-connector* /var/lib/impala/ \
    && rm -rf mysql-connector-*

# Sqoop Env's
ENV SQOOP_HOME /usr/lib/sqoop
ENV PATH $PATH:$SQOOP_HOME/bin
ENV HBASE_HOME /root
ENV HCAT_HOME /root
ENV ACCUMULO_HOME /root

### SQOOP 1.4.7 ###
RUN curl -LO http://ftp.unicamp.br/pub/apache/sqoop/1.4.7/sqoop-1.4.7.tar.gz

RUN tar -zxf sqoop-*.tar.gz \
    && mkdir -p $SQOOP_HOME \
    && mv sqoop-*/* $SQOOP_HOME \
    && rm -rf sqoop-* \
    && ln -s $SQOOP_HOME/bin/sqoop /usr/bin/sqoop

RUN cp $HIVE_HOME/lib/mysql-* $SQOOP_HOME/lib

### SPARK 1.6.1 ###
RUN curl -LO http://archive.apache.org/dist/spark/spark-1.6.1/spark-1.6.1-bin-hadoop2.6.tgz

ENV SPARK_HOME /usr/lib/spark
ENV PATH $PATH:/usr/lib/spark/bin

RUN tar -zxf spark-*.tgz \
    && mkdir -p $SPARK_HOME \
    && mv spark-*/* $SPARK_HOME \
    && rm -rf spark-* \
    && cd $SPARK_HOME \
    && mv conf/log4j.properties.template conf/log4j.properties \
    && sed -i 's/log4j.rootCategory=INFO/log4j.rootCategory=ERROR/' conf/log4j.properties

### PYTHON 2.7.10 ###
RUN yum groupinstall -y "Development tools" \
    && yum install -y zlib-devel \
    bzip2-devel \
    openssl-devel \
    ncurses-devel \
    sqlite-devel  \
    && yum clean all

RUN curl -LO http://python.org/ftp/python/2.7.10/Python-2.7.10.tar.xz

RUN tar xf Python-*.tar.xz \
    && cd Python-* \
    && ./configure --prefix=/usr/local \
    && make && make altinstall \
    && rm -rf /Python* \
    && mv /usr/bin/python /usr/bin/python2.6.6 \
    && ln -s /usr/local/bin/python2.7 /usr/bin/python \
    && sed -i '1 c #!/usr/bin/python2.6.6' /usr/bin/yum

### PIP ###
RUN curl -LO https://bootstrap.pypa.io/get-pip.py \
    && python get-pip.py

### YAML ###
RUN pip install pyyaml

### CLIENT ORACLE ###
ADD apps/instantclient-*-linux.x64-11.2.0.4.0.zip /opt/

RUN cd /opt/ \
    && unzip instantclient-basic-linux.x64-11.2.0.4.0.zip \
    && unzip instantclient-sdk-linux.x64-11.2.0.4.0.zip \
    && rm -f instantclient-*-linux.x64-11.2.0.4.0.zip \
    && ln -s /opt/instantclient_11_2 /opt/instantclient \
    && ln -s /opt/instantclient/libclntsh.so.11.1 /opt/instantclient/libclntsh.so \
    && ldconfig || true \
    && yum install -y libaio

ENV ORACLE_HOME /opt/instantclient
ENV LD_LIBRARY_PATH $LD_LIBRARY_PATH:$ORACLE_HOME
RUN echo 'export ORACLE_HOME=/opt/instantclient' >>/etc/profile \
    && echo 'export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$ORACLE_HOME"' >> /etc/profile

### ORACLE DRIVER SQOOP ###
RUN cp $ORACLE_HOME/ojdbc6.jar $SQOOP_HOME/lib

RUN pip install cx_oracle

RUN sed -i s/HOSTNAME/${HDFS_HOST}/g /etc/hadoop/conf/*-site.xml

RUN groupadd supergroup && usermod -a -G supergroup root

RUN yum install -y openssh-server \
    && yum clean all


RUN adduser rundeck

COPY keys/id_rsa.pub /home/rundeck/.ssh/authorized_keys

RUN chmod 0600 /home/rundeck/.ssh/authorized_keys

RUN chown rundeck:rundeck /home/rundeck/.ssh/authorized_keys

### SBT ###
ADD apps/sbt-0.13.5.rpm /opt/
RUN cd /opt/ \
    && yum install -y sbt-0.13.5.rpm

### KAFKA ###
RUN useradd -d /home/kafka -m -s /bin/bash kafka

ADD  apps/kafka_2.10-0.8.2.1.tgz /opt/

RUN chown -R kafka:kafka /opt/kafka_2.10-0.8.2.1

ENV KAFKA_HOME="/opt/kafka_2.10-0.8.2.1"
ENV PATH="${PATH}:${KAFKA_HOME}/bin"

COPY start-kafka.sh /etc/start-kafka.sh
RUN chmod +x /etc/start-kafka.sh

COPY bootstrap.sh /etc/bootstrap.sh
RUN chmod +x /etc/bootstrap.sh

CMD ["/etc/bootstrap.sh"]
